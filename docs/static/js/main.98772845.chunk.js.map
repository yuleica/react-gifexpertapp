{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","titulo","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAZU,SAACC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAE5CN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAZtB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEtB,ECHyB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBJ,OAZIC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACTf,KAAMG,EACNU,SAAS,SAIlB,CAACpB,IAEDqB,EDjB2BI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGnB,OACI,qCACI,oBAAIJ,UAAU,mDAAd,SAAkEhB,IAEjEoB,GAAW,mBAAGJ,UAAU,mDAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACI,6BAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEdnCe,EAAgB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEpB,EAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAUA,OACI,qCACI,6BAAK0C,IACL,cAAC,EAAD,CAAa1C,cAAeA,IAC5B,uBACA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YAajC0B,EAAcE,aAAe,CACzBD,OAAQ,iBCnCZE,IAASC,OACP,cAAC,EAAD,CAAgBH,OAAS,iBACzBI,SAASC,eAAe,W","file":"static/js/main.98772845.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputValue = (e) => {\n        setInputValue(e.target.value)};\n\n    const handleSumit = (e) => {\n        //prevengo el comportamiento por defecto del formulario\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            //para que pueda viajar el array, aplico este callback si no me da error..\n            setCategories(categories => [inputValue, ...categories]);\n            //valido que no ingrese el mismo valor 2 veces\n            setInputValue('');}\n    };\n\n    return (\n        <form onSubmit={handleSumit}>\n            <input \n                type='text'\n                value={inputValue}\n                onChange={handleInputValue}\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async (category) => {\n    //este objeto viene como un array\n    //encodeURI() elimina espacios en blanco\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mH85BKgRE1ihrZaNTTl78lOmO5Morl8d`;\n    const resp = await fetch(url);\n    //desestructuturo para acceder a los elementos del array\n    const {data} = await resp.json();\n    //mapeo para obtener solo lo que quiero\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url:img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react';\n\n\nexport const GifGridItem = ({title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__bounce animate__faster\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\n\n\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n   const {data:images, loading} = useFetchGifs(category);\n    \n   \n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce animate__fadin\">{category }</h3>\n\n            {loading && <p className=\"animate__animated animate__bounce animate__flash\">Cargando...</p>}\n\n            <div className=\"card-grid\">\n                <ol>\n                    {\n                        images.map(img => (\n                            <GifGridItem \n                                key={img.id}\n                                {...img}/>\n                        ))\n                    }   \n                </ol>\n                </div>\n        </>\n    )\n}","import { useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n});\n\n\n    useEffect(() => {\n\n        getGifs(category) \n            .then(img => {\n                setState({\n                data: img,\n                loading: false\n                });   \n            })\n\n    }, [category])\n\nreturn state; // {data:[], loading: true};\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\nconst GiftExpertApp = ({titulo}) => {\n\n    const [categories, setCategories] = useState(['one punch']);\n \n    // esta función se llamaba con este botón button onClick={handleApp}>Agregar</button> \n    //que iba dentro del return...\n    //const handleApp = () => {\n        //aplico el spread, para agregar un nuevo elemento\n    //    setCategories([...categories,'nuevo elemento']);\n    //};\n    //<li key={category}>{category}</li> este li iba dentro del ol del category.map\n\n    return (\n        <>\n            <h2>{titulo}</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr></hr>\n            <ol>\n                {\n                    categories.map(category => \n                         <GifGrid\n                            key={category} \n                            category={category} />\n                    )\n                }\n            </ol>\n\n        </>);\n}\n\nGiftExpertApp.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n\nGiftExpertApp.defaultProps = {\n    titulo: 'GiftExpertApp'\n};\n\nexport {GiftExpertApp};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GiftExpertApp} from './GiftExpertApp'\n\n\nReactDOM.render(\n  <GiftExpertApp  titulo = 'GifExpertApp' />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}